name: Sync Assigned Issue

on:
  issues:
    types: [assigned]

jobs:
  sync_issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Get issue info
        uses: actions/github-script@v7
        id: extract
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const assignee = context.payload.assignee.login;
            const labels = issue.labels.map(l => l.name);
            return {
              title: issue.title,
              body: issue.body,
              labels,
              assignee,
              number: issue.number,
              url: issue.html_url
            };

      - name: Create issue in private repo
        id: create
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const data = ${JSON.stringify({
              owner: 'Manastik-Tech',
              repo: 'dementia-app-v2',
              title: '${{ steps.extract.outputs.title }}',
              body: '${{ steps.extract.outputs.body }}',
              labels: JSON.parse('${{ steps.extract.outputs.labels }}'),
              assignees: ['${{ steps.extract.outputs.assignee }}']
            })};
            
            const result = await github.rest.issues.create({
              ...data,
              owner: data.owner,
              repo: data.repo
            });
            return result.data;

      - name: Comment with new issue link and close original
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const newIssueNumber = ${{ steps.create.outputs.result_number }};
            const newIssueUrl = ${{ steps.create.outputs.result_html_url }};
            const assignee = '${{ steps.extract.outputs.assignee }}';
            const publicRepo = context.repo;

            // Comment
            await github.rest.issues.createComment({
              owner: publicRepo.owner,
              repo: publicRepo.repo,
              issue_number: ${{ steps.extract.outputs.number }},
              body: `Assigned to ${assignee} - [Issue #${newIssueNumber}](${newIssueUrl})`
            });

            // Add label
            await github.rest.issues.addLabels({
              owner: publicRepo.owner,
              repo: publicRepo.repo,
              issue_number: ${{ steps.extract.outputs.number }},
              labels: ['assigned']
            });

            // Close issue
            await github.rest.issues.update({
              owner: publicRepo.owner,
              repo: publicRepo.repo,
              issue_number: ${{ steps.extract.outputs.number }},
              state: 'closed'
            });
