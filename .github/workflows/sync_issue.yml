name: Sync Assigned Issue to Private Repo

on:
  issues:
    types: [assigned]

jobs:
  extract_issue:
    name: Extract Issue Info
    runs-on: ubuntu-latest
    outputs:
      title: ${{ steps.extract.outputs.title }}
      body: ${{ steps.extract.outputs.body }}
      labels: ${{ steps.extract.outputs.labels }}
      assignee: ${{ steps.extract.outputs.assignee }}
      number: ${{ steps.extract.outputs.number }}
      url: ${{ steps.extract.outputs.url }}
    steps:
      - name: Extract issue details
        id: extract
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const assignee = context.payload.assignee.login;
            const labels = issue.labels.map(l => l.name);
            return {
              title: issue.title,
              body: issue.body,
              labels: JSON.stringify(labels),
              assignee: assignee,
              number: issue.number,
              url: issue.html_url
            };

  create_in_private:
    name: Create Issue in Private Repo
    needs: extract_issue
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.create.outputs.number }}
      html_url: ${{ steps.create.outputs.html_url }}
    steps:
      - name: Create issue
        id: create
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const labels = JSON.parse(`${{ needs.extract_issue.outputs.labels }}`);
            const { data: newIssue } = await github.rest.issues.create({
              owner: 'Manastik-Tech',
              repo: 'dementia-app-v2',
              title: `${{ needs.extract_issue.outputs.title }}`,
              body: `${{ needs.extract_issue.outputs.body }}`,
              labels: labels,
              assignees: [`${{ needs.extract_issue.outputs.assignee }}`]
            });
            return {
              number: newIssue.number,
              html_url: newIssue.html_url
            };

  update_public:
    name: Update Public Issue
    needs: [extract_issue, create_in_private]
    runs-on: ubuntu-latest
    steps:
      - name: Comment, label, and close original issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const issue_number = parseInt('${{ needs.extract_issue.outputs.number }}');
            const assignee = '${{ needs.extract_issue.outputs.assignee }}';
            const newIssueNumber = '${{ needs.create_in_private.outputs.number }}';
            const newIssueUrl = '${{ needs.create_in_private.outputs.html_url }}';

            // Comment on original issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: `Assigned to ${assignee} - [Issue #${newIssueNumber}](${newIssueUrl})`
            });

            // Add "assigned" label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              labels: ['assigned']
            });

            // Close the original issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              state: 'closed'
            });
